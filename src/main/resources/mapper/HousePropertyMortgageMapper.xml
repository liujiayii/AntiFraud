<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antifraud.dao.HousePropertyMortgageDao">

	<resultMap id="BaseResultMap" type="com.antifraud.entity.HousePropertyMortgage">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="HPM_id" property="id" />
		<result column="HPM_entry_number" property="entry_number" />
		<result column="HPM_name" property="name" />
		<result column="HPM_phone" property="phone" />
		<result column="HPM_id_number" property="id_number" />
		<result column="HPM_type" property="type" />
		<result column="HPM_status" property="status" />
		<result column="HPM_emergency_name" property="emergency_name" />
		<result column="HPM_emergency_phone" property="emergency_phone" />
		<result column="HPM_emergency_id_number" property="emergency_id_number" />
		<result column="HPM_apply_for_limit" property="apply_for_limit" />
		<result column="HPM_apply_for_deadline" property="apply_for_deadline" />
		<result column="HPM_purpose_of_loan" property="purpose_of_loan" />
		<result column="HPM_user_id" property="user_id" />
		<result column="HPM_create_time" property="create_time" />
		<result column="HPM_update_time" property="update_time" />
		<result column="HPM_remark" property="remark" />
		<result column="HPM_approval_limit" property="approval_limit" />
		<result column="HPM_approval_deadline" property="approval_deadline" />
		<result column="HPM_affirm_time" property="affirm_time" />
		<result column="HPM_payment_type" property="payment_type" />
		<result column="HPM_affirm_date" property="affirm_date" />
		<result column="HPM_payment_type" property="payment_type" />
		<result column="HPM_affirm_date" property="affirm_date" />
		<result column="HPM_business_type" property="business_type" />
		<result column="HPM_management" property="management" />
		<result column="HPM_gender" property="gender" />
		<result column="HPM_email" property="email" />
		<result column="HPM_spouse_identification_name" property="spouse_identification_name" />
		<result column="HPM_spouse_identification_number" property="spouse_identification_number" />
		<result column="HPM_spousal_work_unit" property="spousal_work_unit" />
		<result column="HPM_spouse_telephone" property="spouse_telephone" />
		<result column="HPM_relative_contact_name" property="relative_contact_name" />
		<result column="HPM_relative_contact_number" property="relative_contact_number" />
		<result column="HPM_account_opening_time" property="account_opening_time" />
		<result column="HPM_emergency_relation" property="emergency_relation" />
		<result column="HPM_domestic_relation" property="domestic_relation" />
		<result column="HPM_age" property="age" />
		<result column="HPM_marital_status" property="marital_status" />
		<result column="HPM_education" property="education" />
		<result column="HPM_diploma" property="diploma" />
		<result column="HPM_home_phone" property="home_phone" />
		<result column="HPM_mailing_address" property="mailing_address" />
		<result column="HPM_home_address" property="home_address" />
		<result column="HPM_business_phone_number" property="business_phone_number" />
		<result column="HPM_permanent_residence_address" property="permanent_residence_address" />
		<result column="HPM_assessmens" property="assessmens" />
		<result column="HPM_risk_management" property="risk_management" />
		<result column="HPM_home_number" property="home_number" />
		<result column="HPM_enterprise_name" property="enterprise_name" />
		<result column="HPM_enterprise_credit" property="enterprise_credit" />
		<result column="HPM_enterprise_bank_no" property="enterprise_bank_no" />
		<result column="HPM_customs_type" property="customs_type" />


	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		HPM.`id` as `HPM_id`, HPM.`entry_number` as `HPM_entry_number`,
		HPM.`name` as `HPM_name`,
		HPM.`phone` as `HPM_phone`, HPM.`id_number`
		as `HPM_id_number`, HPM.`type` as
		`HPM_type`,
		HPM.`status` as
		`HPM_status`, HPM.`emergency_name` as `HPM_emergency_name`,
		HPM.`emergency_phone` as `HPM_emergency_phone`,
		HPM.`emergency_id_number` as `HPM_emergency_id_number`,
		HPM.`apply_for_limit` as `HPM_apply_for_limit`,
		HPM.`apply_for_deadline` as `HPM_apply_for_deadline`,
		HPM.`purpose_of_loan` as `HPM_purpose_of_loan`,
		HPM.`user_id` as
		`HPM_user_id`, HPM.`create_time` as `HPM_create_time`,
		HPM.`update_time` as `HPM_update_time`,
		HPM.`remark` as `HPM_remark`,
		HPM.`approval_limit` as `HPM_approval_limit`,
		HPM.`approval_deadline`
		as `HPM_approval_deadline`,
		HPM.`affirm_time` as `HPM_affirm_time`,
		HPM.`payment_type` as `HPM_payment_type`,
		HPM.`affirm_date` as
		`HPM_affirm_date`, HPM.`business_type` as `HPM_business_type` ,
		HPM.`gender` as `HPM_gender`,
		HPM.`email` as `HPM_email`,
		HPM.`spouse_identification_name` as `HPM_spouse_identification_name`,
		HPM.`spouse_identification_number` as
		`HPM_spouse_identification_number`,
		HPM.`spousal_work_unit` as
		`HPM_spousal_work_unit`,
		HPM.`spouse_telephone` as
		`HPM_spouse_telephone`,
		HPM.`relative_contact_name` as
		`HPM_relative_contact_name`,
		HPM.`relative_contact_number` as
		`HPM_relative_contact_number`,
		HPM.`account_opening_time` as
		`HPM_account_opening_time`,
		HPM.`emergency_relation` as
		`HPM_emergency_relation`,
		HPM.`domestic_relation` as
		`HPM_domestic_relation`,
		HPM.`age` as `HPM_age`,
		HPM.`marital_status` as
		`HPM_marital_status`,
		HPM.`education` as `HPM_education`,
		HPM.`diploma`
		as `HPM_diploma`,
		HPM.`home_phone` as `HPM_home_phone`,
		HPM.`mailing_address` as `HPM_mailing_address`,
		HPM.`home_address` as
		`HPM_home_address`,
		HPM.`business_phone_number` as
		`HPM_business_phone_number`,
		HPM.`permanent_residence_address` as
		`HPM_permanent_residence_address`,
		HPM.`assessmens` as
		`HPM_assessmens`,
		HPM.`management` as `HPM_management`,
		HPM.`risk_management` as `HPM_risk_management`,
		HPM.`home_number` as
		`HPM_home_number`,
		HPM.`enterprise_name` as `HPM_enterprise_name`,
		HPM.`enterprise_credit` as `HPM_enterprise_credit`,
		HPM.`enterprise_bank_no` as `HPM_enterprise_bank_no`,
		HPM.`customs_type` as `HPM_customs_type`
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from `t_house_property_mortgage` HPM
		where HPM.`id` =
		#{id,jdbcType=BIGINT}
	</select>
	<!-- 根据id查询全部 -->
	<select id="selectById" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from
		t_house_property_mortgage
		where id = #{id}

	</select>
	<!-- 根据id删除 -->
	<delete id="deleteById" parameterType="com.antifraud.entity.HousePropertyMortgage">
		delete from
		t_house_property_mortgage
		where id = #{id}
	</delete>
	<!-- 根据id修改 -->
	<update id="updateById" parameterType="com.antifraud.entity.HousePropertyMortgage">
		UPDATE
		t_house_property_mortgage h
		SET
		h.id = #{id},
		h.entry_number =
		#{entry_number},
		h.name = #{name},
		h.phone = #{phone},
		h.id_number =
		#{id_number},
		h.type = #{type},
		h.status =
		#{status},
		h.emergency_name =
		#{emergency_name},
		h.emergency_phone = #{emergency_phone},
		h.emergency_id_number = #{emergency_id_number},
		h.apply_for_limit =
		#{apply_for_limit},
		h.apply_for_deadline = #{apply_for_deadline},
		h.purpose_of_loan = #{purpose_of_loan},
		h.user_id = #{user_id},
		h.create_time = #{create_time},
		h.update_time = #{update_time},
		h.remark = #{remark},
		h.approval_limit = #{approval_limit},
		h.approval_deadline = #{approval_deadline},
		h.affirm_time =
		#{affirm_time},
		h.payment_type = #{payment_type},
		h.affirm_date =
		#{affirm_date},
		h.business_type = #{business_type}
		h.management =
		#{management},
		h.gender = #{gender},
		h.email = #{email},
		h.spouse_identification_name = #{spouse_identification_name},
		h.spouse_identification_number = #{spouse_identification_number},
		h.spousal_work_unit = #{spousal_work_unit},
		h.spouse_telephone =
		#{spouse_telephone},
		h.relative_contact_name =
		#{relative_contact_name},
		h.relative_contact_number =
		#{relative_contact_number},
		h.account_opening_time =
		#{account_opening_time},
		h.emergency_relation = #{emergency_relation},
		h.domestic_relation = #{domestic_relation},
		h.age = #{age},
		h.marital_status = #{marital_status},
		h.education = #{education},
		h.diploma = #{diploma},
		h.home_phone = #{home_phone},
		h.mailing_address
		= #{mailing_address},
		h.home_address = #{home_address},
		h.business_phone_number = #{business_phone_number},
		h.permanent_residence_address = #{permanent_residence_address},
		h.assessmens = #{assessmens},
		h.risk_management = #{risk_management},
		h.home_number = #{home_number},
		h.enterprise_name = #{enterprise_name},
		h.enterprise_credit = #{enterprise_credit},
		h.enterprise_bank_no =
		#{enterprise_bank_no},
		h.customs_type = #{customs_type},
		where
		h.id =
		#{id}
	</update>
	<!-- 保存全部的方法 -->
	<insert id="saveAll" parameterType="com.antifraud.entity.HousePropertyMortgage">
		insert into
		t_house_property_mortgage(
		id,
		entry_number,
		name,
		phone,
		id_number,
		type,
		status,
		emergency_name,
		emergency_phone,
		emergency_id_number,
		apply_for_limit,
		apply_for_deadline,
		purpose_of_loan,
		user_id,
		create_time,
		update_time,
		remark,
		approval_limit,
		approval_deadline,
		affirm_time,
		payment_type,
		affirm_date,
		business_type,
		gender,
		email,
		spouse_identification_name,
		spouse_identification_number,
		spousal_work_unit,
		spouse_telephone,
		relative_contact_name,
		relative_contact_number,
		account_opening_time,
		emergency_relation,
		domestic_relation,
		age,
		marital_status,
		education,
		diploma,
		home_phone,
		mailing_address,
		home_address,
		business_phone_number,
		permanent_residence_address,
		assessmens,
		management,
		risk_management,
		home_number,
		enterprise_name,
		enterprise_credit,
		enterprise_bank_no,
		customs_type
		)values(
		#{id},
		#{entry_number},
		#{name},
		#{phone},
		#{id_number},
		#{type},
		#{status},
		#{emergency_name},
		#{emergency_phone},
		#{emergency_id_number},
		#{apply_for_limit},
		#{apply_for_deadline},
		#{purpose_of_loan},
		#{user_id},
		#{create_time},
		#{update_time},
		#{remark},
		#{approval_limit},
		#{approval_deadline},
		#{affirm_time},
		#{payment_type},
		#{affirm_date},
		#{business_type},
		#{gender},
		#{email},
		#{spouse_identification_name},
		#{spouse_identification_number},
		#{spousal_work_unit},
		#{spouse_telephone},
		#{relative_contact_name},
		#{relative_contact_number},
		#{account_opening_time},
		#{emergency_relation},
		#{domestic_relation},
		#{age},
		#{marital_status},
		#{education},
		#{diploma},
		#{home_phone},
		#{mailing_address},
		#{home_address},
		#{business_phone_number},
		#{permanent_residence_address},
		#{assessmens},
		#{management},
		#{risk_management},
		#{home_number},
		#{enterprise_name},
		#{enterprise_credit},
		#{enterprise_bank_no},
		#{customs_type}
		)
	</insert>
	<!-- 保存的方法 -->
	<insert id="insert" parameterType="com.antifraud.entity.HousePropertyMortgage">
		insert into
		t_house_property_mortgage(
		id,
		entry_number,
		name,
		phone,
		id_number,
		type,
		status,
		emergency_name,
		emergency_phone,
		emergency_id_number,
		apply_for_limit,
		apply_for_deadline,
		purpose_of_loan,
		user_id,
		create_time,
		update_time,
		remark,
		approval_limit,
		approval_deadline,
		affirm_time,
		payment_type,
		affirm_date,
		business_type,
		gender,
		email,
		spouse_identification_name,
		spouse_identification_number,
		spousal_work_unit,
		spouse_telephone,
		relative_contact_name,
		relative_contact_number,
		account_opening_time,
		emergency_relation,
		domestic_relation,
		age,
		marital_status,
		education,
		diploma,
		home_phone,
		mailing_address,
		home_address,
		business_phone_number,
		permanent_residence_address,
		assessmens,
		management,
		risk_management,
		home_number,
		enterprise_name,
		enterprise_credit,
		enterprise_bank_no,
		customs_type
		)values(
		#{id},
		#{entry_number},
		#{name},
		#{phone},
		#{id_number},
		#{type},
		#{status},
		#{emergency_name},
		#{emergency_phone},
		#{emergency_id_number},
		#{apply_for_limit},
		#{apply_for_deadline},
		#{purpose_of_loan},
		#{user_id},
		#{create_time},
		#{update_time},
		#{remark},
		#{approval_limit},
		#{approval_deadline},
		#{affirm_time},
		#{payment_type},
		#{affirm_date},
		#{business_type},
		#{gender},
		#{email},
		#{spouse_identification_name},
		#{spouse_identification_number},
		#{spousal_work_unit},
		#{spouse_telephone},
		#{relative_contact_name},
		#{relative_contact_number},
		#{account_opening_time},
		#{emergency_relation},
		#{domestic_relation},
		#{age},
		#{marital_status},
		#{education},
		#{diploma},
		#{home_phone},
		#{mailing_address},
		#{home_address},
		#{business_phone_number},
		#{permanent_residence_address},
		#{assessmens},
		#{management},
		#{risk_management},
		#{home_number},
		#{enterprise_name},
		#{enterprise_credit},
		#{enterprise_bank_no},
		#{customs_type}
		)
	</insert>
	<!-- 电话查询 -->
	<select id="findByPhone" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_house_property_mortgage as HPM
		where 1=1
		<if test="user_id!= null and user_id != ''">
			and HPM.user_id = #{user_id}
		</if>
		<if test="phone != null and phone != ''">
			and HPM.`phone` like concat('%',#{phone},'%')
		</if>
		order by create_time desc
	</select>

	<!-- 根据电话号码模糊查询 -->
	<select id="listAllAndPhone" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_house_property_mortgage as HPM
		<where>
			<if test="phone != null and phone != ''">
				HPM.`phone` like concat('%',#{phone},'%')
			</if>
			<if test="user_id != null and user_id != ''">
				and HPM.user_id=#{user_id}
			</if>
			<if test="type != null and type != ''">
				and HPM.type=#{type}
			</if>
			<choose>
				<when test="status != null and status != ''">
					and HPM.status=#{status}
				</when>
				<when test="type == null and status == null">
					and 1=1
				</when>
				<otherwise>
					and ISNULL(HPM.status)
				</otherwise>
			</choose>
		</where>
		order by HPM.id desc
		limit #{page},#{size}
	</select>

	<!-- 通过id查询该报单详情(lujinpeng) -->

	<select id="getDetailsById" resultType="com.antifraud.entityVO.HousePropertyMortgageVo">
		select HPM.*,P.*
		from
		t_house_property_mortgage as HPM JOIN t_photo as P ON
		HPM.entry_number
		= P.report_id
		where HPM.id = #{id}
	</select>

	<!-- 通过id查询该报单详情 -->
	<select id="getByid" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from
		t_house_property_mortgage
		where id = #{id}
	</select>

	<!-- 通过报单编号查询 (lujinpeng) -->
	<select id="findByEntryNumber" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from t_house_property_mortgage as HPM
		where
		HPM.entry_number=#{entry_number}
	</select>

	<!-- 分页查询 （lujinpeng） -->
	<select id="findByLimit" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from t_house_property_mortgage
		<where>
			<if test="status != null and status != ''">
				status=#{status}
			</if>
			<if test="user_id != null and user_id != ''">
				and
				user_id=#{user_id}
			</if>
		</where>
		order by id desc
		limit #{page},#{size}
	</select>

	<!-- 查询总数 （lujinpeng） -->
	<select id="getCount" resultType="java.lang.Integer">
		select
		count(*)
		from t_house_property_mortgage as HPM
		<where>
			<if test="phone != null and phone != ''">
				HPM.`phone` like concat('%',#{phone},'%')
			</if>
			<if test="user_id != null and user_id != ''">
				and HPM.user_id=#{user_id}
			</if>
			<if test="type != null and type != ''">
				and HPM.type=#{type}
			</if>
			<choose>
				<when test="status != null and status != ''">
					and HPM.status=#{status}
				</when>
				<when test="type == null and status == null">
					and 1=1
				</when>
				<otherwise>
					and ISNULL(HPM.status)
				</otherwise>
			</choose>
		</where>

	</select>
	<!-- 查询目前最大的一个报单编号 -->
	<select id="findLastEntryNumber" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from
		t_house_property_mortgage
		order by entry_number desc limit 1
	</select>
	<!-- 分页查询 可以签合同的房屋贷款报单 -->
	<select id="findAllHousePropertyMortgageForCompact" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from t_house_property_mortgage
		where status =6
		limit
		#{star},#{limit}
	</select>
	<!-- 根據user_id查询全部 -->
	<select id="findByUserId" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from
		t_house_property_mortgage
		where user_id = #{user_id}
		order
		by id desc
		<if test="page != null and limit != null">
			limit
			#{page},#{limit}
		</if>
	</select>
	<!-- 修改房屋贷款进程状态 -->
	<select id="findAllHousePropertyMortgageForCompactCount"
		resultType="integer">
		select count(*)
		from t_house_property_mortgage
		where status
		=6
	</select>



	<!-- 查询全部的方法 -->
	<select id="findAll" resultType="com.antifraud.entity.HousePropertyMortgage">
		select * from
		t_house_property_mortgage
	</select>

	<!-- 修改报单状态 -->
	<update id="updateHousePropertyMortgageStatus">
		UPDATE t_house_property_mortgage
		SET STATUS
		=#{status},remark =#{remark}
		WHERE entry_number = #{entry_number}
	</update>


	<!-- 根据风控人员Id(management)查询状态值(status)为3(业务反馈通过)的数据 -->
	<select id="findByManagement" resultType="com.antifraud.entity.HousePropertyMortgage">
		select *
		from
		t_house_property_mortgage
		WHERE
		management = #{management} AND status =3
		limit #{page},#{size}
	</select>

	<!-- 统计风控人员Id(management)查询状态值(status)为3(业务反馈通过)的数据 -->
	<select id="findByManagementCount" resultType="integer">
		select COUNT(*)
		from
		t_house_property_mortgage
		WHERE
		management = #{management} AND
		status =3
	</select>
	<!--查询上标所需要的字段 -->
	<select id="findListAlls" resultType="com.antifraud.entityVO.FklistVo">
		select h.entry_number
		entry_number,b.site site,
		o.service_rate service_rate,b.facetime
		facetime,b.Interview_place
		Interview_place,h.name name,
		h.gender
		gender,h.age age,o.company_name company_name,b.reception_personnel
		reception_personnel,
		h.id_number id_number,o.occupational
		occupational,o.company_address
		company_address,
		o.commany_tel
		commany_tel,b.home_address home_address, h.phone
		phone,h.marital_status marital_status,
		h.spouse_identification_name
		spouse_identification_name,h.spouse_telephone
		spouse_telephone,b.monthly_profit monthly_profit,
		b.spouse_monthly_profit spouse_monthly_profit,b.home_annual_income
		home_annual_income,h.purpose_of_loan purpose_of_loan,
		h.approval_limit
		approval_limit,b.bor_type bor_type,b.borrowing_species
		borrowing_species,b.reward reward,
		b.money_collecting_time
		money_collecting_time,b.ource_of_revenue ource_of_revenue,b.repayment
		repayment,
		b.housing_situation housing_situation,b.car_situation
		car_situation,b.other_assets
		other_assets,
		b.guaranty_style
		guaranty_style,b.credit credit,b.name_of_sponsor
		name_of_sponsor,b.margin_trade margin_trade,
		b.pledge_type
		pledge_type,b.belong_to_oneself belong_to_oneself,b.assess_price
		assess_price,
		b.life_of_loan life_of_loan,b.whether_the_loan
		whether_the_loan,b.observant_party
		observant_party,
		b.branch_office
		branch_office,h.education education,b.line_of_credit
		line_of_credit,b.liabilities_of_bank liabilities_of_bank,
		b.liabilities_of_folk liabilities_of_folk,b.loan_documentation
		loan_documentation,b.borrowing_that borrowing_that,
		b.survey_and_opinion survey_and_opinion,o.period_of_resident
		period_of_resident,h.type type,o.industry_of_the_company
		industry_of_the_company,
		b.credit credit,o.duty
		duty,o.professional_title
		professional_title,o.annual_income
		annual_income,
		h.emergency_relation emergency_relation,
		o.residential_condition residential_condition,h.relative_contact_name
		relative_contact_name,h.relative_contact_number
		relative_contact_number,
		h.email email,h.apply_for_deadline
		apply_for_deadline,h.spousal_work_unit
		spousal_work_unit,h.diploma
		diploma,h.education education,h.remark
		remark,
		h.marital_status
		marital_status,o.company_mail company_mail,b.annual_interest_rate
		annual_interest_rate,b.risk_control_opinion risk_control_opinion,
		o.throw_industry throw_industry,h.mailing_address
		mailing_address,h.emergency_name emergency_name,h.emergency_phone
		emergency_phone,h.emergency_id_number emergency_id_number,
		h.apply_for_limit apply_for_limit,h.create_time
		create_time,h.update_time update_time,h.business_type
		business_type,h.account_opening_time account_opening_time,
		h.domestic_relation domestic_relation,h.approval_deadline
		approval_deadline,h.home_phone
		home_phone,h.spouse_identification_number
		spouse_identification_number,
		h.business_phone_number
		business_phone_number,h.permanent_residence_address
		permanent_residence_address,o.starting_work starting_work

		from
		t_house_property_mortgage h,t_occupational_information
		o,t_business_massage b
		where h.entry_number=o.entry_number and
		h.entry_number=b.entry_number and h.entry_number=#{entry_number} and
		h.status=7

	</select>



	<!-- 根据房屋报单编号修改状态值 -->
	<!-- int updateStatus(@Param("entry_number")String entry_number,@Param("status")int 
		status); -->
	<update id="updateStatus">
		update t_house_property_mortgage
		set status=#{status}
		where
		entry_number=#{entry_number}
	</update>

	<!-- 统计房贷总数量 -->
	<select id="fiduciaryCount" resultType="integer">
		select count(*) from
		t_house_property_mortgage
	</select>

	<!--根据状态分页查询房屋报单 -->
	<select id="fiandHousePropertyMortgageByStatus" resultType="com.antifraud.entity.HousePropertyMortgage">
		SELECT *
		FROM t_house_property_mortgage
		WHERE `status` IN
		(${status1},${status2})
		LIMIT ${star},${limit}
	</select>
	<select id="fiandHousePropertyMortgageByStatusCount" resultType="integer">
		SELECT count(*)
		FROM t_house_property_mortgage
		WHERE `status` IN
		(${status1},${status2})
	</select>
	<!-- 房贷金额 -->
	<select id="houseMoney" resultType="java.math.BigDecimal">
		select sum(approval_limit)
		from t_house_property_mortgage
	</select>

	<!-- 修改报单状态和备注 -->
	<update id="updateStatusAndRemark">
		update t_house_property_mortgage
		set
		status=#{status},remark=#{remark}
		where
		id=#{id}
	</update>

	<!-- 根据ID修改状态 -->
	<update id="updateByIdStatus">
		update t_house_property_mortgage
		set status=#{status}
		where
		id=#{id}
	</update>

	<!-- 查询房屋评估师id -->
	<select id="getassessmensId" resultType="com.antifraud.entity.User">

		SELECT id from t_user
		WHERE post='房屋评估师'

	</select>
	<!-- 查询最后一条资产评估的id -->
	<select id="lastid" resultType="com.antifraud.entity.HousePropertyMortgage">

		select *
		from
		t_house_property_mortgage
		order by update_time DESC limit 1
	</select>




	<!-- 查询所有风控内勤人员 -->
	<!-- List<User> getassessmensIdH(); -->
	<select id="getassessmensIdH" resultType="com.antifraud.entity.User">

		SELECT id from t_user
		WHERE post='风控内勤' or post='风控主管'

	</select>

	<!-- 查询所有风控外勤人员 -->
	<!-- List<User> getRiskManagementIdH(); -->
	<select id="getRiskManagementIdH" resultType="com.antifraud.entity.User">

		SELECT id from
		t_user WHERE post='风控外勤' or post='风控主管'

	</select>



	<!-- 查询最后一条报单的风控内勤id -->
	<!-- List<HousePropertyMortgage> lastidH(); -->
	<select id="lastidH" resultType="com.antifraud.entity.HousePropertyMortgage">
		select * from
		t_house_property_mortgage where status=3 order by update_time
		DESC
		limit 1
	</select>

	<!-- 查询最后一条已通过面审的风控外勤id -->
	<!-- List<HousePropertyMortgage> lastidHS(); -->
	<select id="lastidHS" resultType="com.antifraud.entity.HousePropertyMortgage">
		select * from
		t_house_property_mortgage where status=4 order by update_time
		DESC
		limit 1
	</select>

	<!-- 修改风控内勤id -->
	<!-- int updateManagementId(@Param("id")Long id,@Param("managemnt")Long 
		managemnt); -->
	<update id="updateManagementId">
		update t_house_property_mortgage
		set
		management=#{management}
		where
		id=#{id}
	</update>



	<!-- 修改风控外勤id -->
	<!-- int updateRiskManagementId(@Param("id")Long id,@Param("risk_management")Long 
		risk_management); -->
	<update id="updateRiskManagementId">
		update t_house_property_mortgage
		set
		risk_management=#{risk_management}
		where
		id=#{id}
	</update>



	<!-- 拒绝通过的方法(拒绝通过后,订单状态变为1,不通过,但是订单不会删除) -->
	<!-- int refuseToPass(String entry_number,int status); -->
	<update id="refuseToPass">
		update
		t_house_property_mortgage
		set status=#{status}
		where
		entry_number=#{entry_number}
	</update>


	<!-- 根据报单编号修改 备注信息 -->
	<!-- int updateRemark(String entry_number,String remark); -->
	<update id="updateRemark">
		update
		t_house_property_mortgage
		set remark=#{remark}
		where
		entry_number=#{entry_number}
	</update>
	<!-- 根据报单查询当前操作人 -->
	<select id="selectManagement" resultType="com.antifraud.entity.User">
		select t.name FROM
		t_user t where t.id=(
		select h.management from
		t_house_property_mortgage h where h.entry_number = #{entry_number})

	</select>

	<!-- 根据报单编号修改更新时间 -->
	<!-- int updateTimeH(String entry_number); -->
	<update id="updateTimeH">
		update
		t_house_property_mortgage
		set update_time=now()
		where
		entry_number=#{entry_number}

	</update>
	<!-- 资产评估修改字段 -->
	<update id="updatefield" parameterType="com.antifraud.entity.HousePropertyMortgage">
		update
		t_house_property_mortgage
		set
		approval_limit =
		#{approval_limit},
		affirm_time = #{affirm_time},
		payment_type =
		#{payment_type},
		approval_amount=#{approval_amount},
		status = #{status},
		remark = #{remark}
		where id = #{id}

	</update>


	<!-- 修改并提交房屋报单 -->
	<!-- int submitDeclarationH(HousePropertyMortgage housePropertyMortgage); -->
	<update id="submitDeclarationH" parameterType="com.antifraud.entity.HousePropertyMortgage">
		update
		t_house_property_mortgage
		set
		home_number=#{home_number},
		name=#{name},
		id_number=#{id_number},
		gender=#{gender},
		age=#{age},
		marital_status=#{marital_status},
		education=#{education},
		diploma=#{diploma},
		phone=#{phone},
		home_phone=#{home_phone},
		business_phone_number=#{business_phone_number},
		home_address=#{home_address},
		mailing_address=#{mailing_address},
		permanent_residence_address=#{permanent_residence_address},
		email=#{email},
		spouse_identification_name=#{spouse_identification_name},
		spouse_identification_number=#{spouse_identification_number},
		spousal_work_unit=#{spousal_work_unit},
		spouse_telephone=#{spouse_telephone},
		relative_contact_name=#{relative_contact_name},
		domestic_relation=#{domestic_relation},
		relative_contact_number=#{relative_contact_number},
		emergency_name=#{emergency_name},
		emergency_relation=#{emergency_relation},
		emergency_phone=#{emergency_phone},
		apply_for_limit=#{apply_for_limit},
		apply_for_deadline=#{apply_for_deadline},
		account_opening_time=#{account_opening_time},
		type=#{type},
		affirm_time=#{affirm_time}
		where
		entry_number=#{entry_number}
	</update>


	<!-- 根据日期查询首页房屋报单信息 -->
	<!-- BigDecimal findByDate(@Param("year")String year,@Param("month")String month,@Param("day")String day); -->
	<select id="findByDate" resultType="java.math.BigDecimal">
		SELECT sum(approval_limit)
		FROM
		t_house_property_mortgage
		<where>
			<if test="year!=null">
				AND year(create_time) = #{year}
			</if>
			<if test="month!=null">
				AND month(create_time )= #{month}
			</if>
			<if test="day!=null">
				AND day(create_time)=#{day}
			</if>
		</where>
	</select>

	
	<!-- 根据日期查询首页房屋报单总数量 -->
	<!-- Integer findByCount(@Param("year")String year,@Param("month")String month,@Param("day")String day) -->
	<select id="findByCount" resultType="java.lang.Integer">
		SELECT count(*) 
		FROM 
		t_house_property_mortgage
		<where>
			<if test="year!=null">
				AND year(create_time) = #{year}
			</if>
			<if test="month!=null">
				AND month(create_time )= #{month}
			</if>
			<if test="day!=null">
				AND day(create_time)=#{day}
			</if>
		</where>
	</select>




</mapper>