<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.antifraud.dao.FiduciaryLoanDao">
	<!-- 公共sql片段 -->
	<sql id="Base_Column_List">
		id,
		entry_number,
		name,
		phone,
		id_number,
		type,
		status,
		emergency_name,
		emergency_phone,
		emergency_id_number,
		apply_for_limit,
		apply_for_deadline,
		purpose_of_loan,
		user_id,
		create_time,
		update_time,
		remark,
		approval_limit,
		approval_deadline,
		affirm_time,
		payment_type,
		work_info,
		work_address,
		income,
		affirm_date,
		business_type,
		gender,
		age,
	    marital_status,
		education,
		diploma,
		home_phone,
		business_phone_number,
		home_address,
		mailing_address,
		permanent_residence_address,
		email,
		spouses_name,
		spouse_identification_number,
		spousal_work_unit,
		spouse_telephone,
		relative_contact_name,
		relative_contact_number,
		account_opening_time,
		emergency_relation,
		domestic_relation,
		assessmens,
		management,
		risk_management,
		enterprise_name,
		enterprise_credit,
		enterprise_bank_no,
		customs_type
	</sql>
	<!-- 保存全部的方法 -->
	<insert id="saveFiduciaryLoan" parameterType = "com.antifraud.entity.FiduciaryLoan">
		insert into t_fiduciary_loan(
		id,
		entry_number,
		name,
		phone,
		id_number,
		type,
		status,
		emergency_name,
		emergency_phone,
		emergency_id_number,
		apply_for_limit,
		apply_for_deadline,
		purpose_of_loan,
		user_id,
		create_time,
		update_time,
		remark,
		approval_limit,
		approval_deadline,
		affirm_time,
		payment_type,
		work_info,
		work_address,
		income,
		affirm_date,
		business_type,
		gender,
		age,
	    marital_status,
		education,
		diploma,
		home_phone,
		business_phone_number,
		home_address,
		mailing_address,
		permanent_residence_address,
		email,
		spouses_name,
		spouse_identification_number,
		spousal_work_unit,
		spouse_telephone,
		relative_contact_name,
		relative_contact_number,
		account_opening_time,
		emergency_relation,
		domestic_relation,
		assessmens,
		management,
		risk_management,
		enterprise_name,
		enterprise_credit,
		enterprise_bank_no,
		customs_type
		)values(
		#{id},
		#{entry_number},
		#{name},
		#{phone},
		#{id_number},
		#{type},
		#{status},
		#{emergency_name},
		#{emergency_phone},
		#{emergency_id_number},
		#{apply_for_limit},
		#{apply_for_deadline},
		#{purpose_of_loan},
		#{user_id},
		#{create_time},
		#{update_time},
		#{remark},
		#{approval_limit},
		#{approval_deadline},
		#{affirm_time},
		#{payment_type},
		#{work_info},
		#{work_address},
		#{income},
		#{affirm_date},
		#{business_type},
		#{gender},
		#{age},
	    #{marital_status},
		#{education},
		#{diploma},
		#{home_phone},
		#{business_phone_number},
		#{home_address},
		#{mailing_address},
		#{permanent_residence_address},
		#{email},
		#{spouses_name},
		#{spouse_identification_number},
		#{spousal_work_unit},
		#{spouse_telephone},
		#{relative_contact_name},
		#{relative_contact_number},
		#{account_opening_time},
		#{emergency_relation},
		#{domestic_relation},
		#{assessmens},
		#{management},
		#{risk_management},
		#{enterprise_name},
		#{enterprise_credit},
		#{enterprise_bank_no},
		#{customs_type}
		)
	</insert>
	
	<!-- 添加的方法 -->
	<insert id="insert" parameterType = "com.antifraud.entity.FiduciaryLoan">
		insert into t_fiduciary_loan(
		id,
		entry_number,
		name,
		phone,
		id_number,
		type,
		status,
		emergency_name,
		emergency_phone,
		emergency_id_number,
		apply_for_limit,
		apply_for_deadline,
		purpose_of_loan,
		user_id,
		create_time,
		update_time,
		remark,
		approval_limit,
		approval_deadline,
		affirm_time,
		payment_type,
		work_info,
		work_address,
		income,
		affirm_date,
		business_type,
		gender,
		age,
	    marital_status,
		education,
		diploma,
		home_phone,
		business_phone_number,
		home_address,
		mailing_address,
		permanent_residence_address,
		email,
		spouses_name,
		spouse_identification_number,
		spousal_work_unit,
		spouse_telephone,
		relative_contact_name,
		relative_contact_number,
		account_opening_time,
		emergency_relation,
		domestic_relation,
		assessmens,
		management,
		risk_management,
		enterprise_name,
		enterprise_credit,
		enterprise_bank_no,
		customs_type
		)values(
		#{id},
		#{entry_number},
		#{name},
		#{phone},
		#{id_number},
		#{type},
		#{status},
		#{emergency_name},
		#{emergency_phone},
		#{emergency_id_number},
		#{apply_for_limit},
		#{apply_for_deadline},
		#{purpose_of_loan},
		#{user_id},
		#{create_time},
		#{update_time},
		#{remark},
		#{approval_limit},
		#{approval_deadline},
		#{affirm_time},
		#{payment_type},
		#{work_info},
		#{work_address},
		#{income},
		#{affirm_date},
		#{business_type},
		#{gender},
		#{age},
	    #{marital_status},
		#{education},
		#{diploma},
		#{home_phone},
		#{business_phone_number},
		#{home_address},
		#{mailing_address},
		#{permanent_residence_address},
		#{email},
		#{spouses_name},
		#{spouse_identification_number},
		#{spousal_work_unit},
		#{spouse_telephone},
		#{relative_contact_name},
		#{relative_contact_number},
		#{account_opening_time},
		#{emergency_relation},
		#{domestic_relation},
		#{assessmens},
		#{management},
		#{risk_management},
		#{enterprise_name},
		#{enterprise_credit},
		#{enterprise_bank_no},
		#{customs_type}
		)
	</insert>
	<!-- 根据id删除 -->
	<delete id="deleteFiduciaryLoanById" parameterType="com.antifraud.entity.FiduciaryLoan">
		delete from
		t_fiduciary_loan
		where id =#{id}
	</delete>

	<!-- 根据id修改 -->
	<update id="updateFiduciaryLoanById" parameterType="com.antifraud.entity.FiduciaryLoan">
		update t_fiduciary_loan
		<set>
			<if test="id != null and id != ''">
				id = #{id},
			</if>
			<if test="entry_number != null and entry_number != ''">
				entry_number = #{entry_number},
			</if>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="phone != null and phone != ''">
				phone = #{phone},
			</if>
			<if test="id_number != null and id_number != ''">
				id_number = #{id_number},
			</if>
			<if test="type != null and type != ''">
				type = #{type},
			</if>
			<if test="status != null and status != ''">
				status = #{status,jdbcType = INTEGER},
			</if>
			<if test="emergency_name != null and emergency_name != ''">
				emergency_name = #{emergency_name},
			</if>
			<if test="emergency_phone != null and emergency_phone != ''">
				emergency_phone = #{emergency_phone},
			</if>
			<if test="emergency_id_number != null and emergency_id_number != ''">
				emergency_id_number = #{emergency_id_number},
			</if>
			<if test="apply_for_limit != null and apply_for_limit != ''">
				apply_for_limit = #{apply_for_limit},
			</if>
			<if test="apply_for_deadline != null and apply_for_deadline != ''">
				apply_for_deadline = #{apply_for_deadline},
			</if>
			<if test="purpose_of_loan != null and purpose_of_loan != ''">
				purpose_of_loan = #{purpose_of_loan},
			</if>
			<if test="user_id != null and user_id != ''">
				user_id = #{user_id},
			</if>
			<if test="create_time != null and create_time != ''">
				create_time = #{create_time},
			</if>
			<if test="update_time != null and update_time != ''">
				update_time = #{update_time},
			</if>
			<if test="remark != null and remark != ''">
				remark = #{remark},
			</if>
			<if test="approval_limit != null and approval_limit != ''">
				approval_limit = #{approval_limit},
			</if>
			<if test="approval_deadline != null and approval_deadline != ''">
				approval_deadline = #{approval_deadline},
			</if>
			<if test="affirm_time != null and affirm_time != ''">
				affirm_time = #{affirm_time},
			</if>
			<if test="payment_type != null and payment_type != ''">
				payment_type = #{payment_type},
			</if>
			<if test="work_info != null and work_info != ''">
				work_info = #{work_info},
			</if>
			<if test="work_address != null and work_address != ''">
				work_address = #{work_address},
			</if>
			<if test="income != null and income != ''">
				income = #{income},
			</if>
			<if test="affirm_date != null and affirm_date != ''">
				affirm_date = #{affirm_date},
			</if>
			<if test="business_type != null and business_type != ''">
				business_type = #{business_type},
			</if>
			<if test="gender != null and gender != ''">
				gender = #{gender},
			</if>
			<if test="age != null and age != ''">
				age = #{age},
			</if>
			<if test="marital_status != null and marital_status != ''">
				marital_status = #{marital_status},
			</if>
			<if test="education != null and education != ''">
				education = #{education},
			</if>
			<if test="diploma != null and diploma != ''">
				diploma = #{diploma},
			</if>
			<if test="home_phone != null and home_phone != ''">
				home_phone = #{home_phone},
			</if>
			<if test="business_phone_number != null and business_phone_number != ''">
				business_phone_number = #{business_phone_number},
			</if>
			<if test="home_address != null and home_address != ''">
				home_address = #{home_address},
			</if>
			<if test="mailing_address != null and mailing_address != ''">
				mailing_address = #{mailing_address},
			</if>
			<if test="permanent_residence_address != null and permanent_residence_address != ''">
				permanent_residence_address = #{permanent_residence_address},
			</if>
			<if test="email != null and email != ''">
				email = #{email},
			</if>
			<if test="spouses_name != null and spouses_name != ''">
				spouses_name = #{spouses_name},
			</if>
			<if test="spouse_identification_number != null and spouse_identification_number != ''">
				spouse_identification_number = #{spouse_identification_number},
			</if>
			<if test="spousal_work_unit != null and spousal_work_unit != ''">
				spousal_work_unit = #{spousal_work_unit},
			</if>
			<if test="spouse_telephone != null and spouse_telephone != ''">
				spouse_telephone = #{spouse_telephone},
			</if>
			<if test="approval_amount != null and approval_amount != ''">
				approval_amount = #{approval_amount},
			</if>
			<if test="relative_contact_name != null and relative_contact_name != ''">
				relative_contact_name = #{relative_contact_name},
			</if>
			<if test="relative_contact_number != null and relative_contact_number != ''">
				relative_contact_number = #{relative_contact_number},
			</if>
			<if test="account_opening_time != null and account_opening_time != ''">
				account_opening_time = #{account_opening_time},
			</if>
			<if test="emergency_relation != null and emergency_relation != ''">
				emergency_relation = #{emergency_relation},
			</if>
			<if test="domestic_relation != null and domestic_relation != ''">
				domestic_relation = #{domestic_relation},
			</if>
			<if test="assessmens != null and assessmens != ''">
				assessmens = #{assessmens},
			</if>
			<if test="management != null and management != ''">
				management = #{management},
			</if>
			<if test="risk_management != null and risk_management != ''">
				risk_management = #{risk_management},
			</if>
			<if test="enterprise_name != null and enterprise_name != ''">
				enterprise_name = #{enterprise_name},
			</if>
			<if test="enterprise_credit != null and enterprise_credit != ''">
				enterprise_credit = #{enterprise_credit},
			</if>
			<if test="enterprise_bank_no != null and enterprise_bank_no != ''">
				enterprise_bank_no = #{enterprise_bank_no},
			</if>
			<if test="customs_type != null and customs_type != ''">
				customs_type = #{customs_type},
			</if>
		</set>
		where id = #{id,jdbcType = BIGINT}
	</update>

	<!-- 根据id查询 -->
	<select id="findById" resultType="com.antifraud.entity.FiduciaryLoan"
		parameterType="java.lang.Long">
		select
		*
		from
		t_fiduciary_loan
		where id = #{id}
	</select>

	<!-- 根据id查询信贷详情（包括图片） -->
	<select id="getDetailsById" resultType="com.antifraud.entityVO.FiduciaryLoanVo"
		parameterType="java.lang.Long">
		select
		tfl.*,tp.*
		from
		t_fiduciary_loan tfl,t_photo tp
		where tfl.entry_number = tp.report_id and tfl.id = #{id}
	</select>
	<!-- 电话查询 -->
	<select id="findByPhone" resultType="com.antifraud.entity.FiduciaryLoan">
		select
		<include refid="Base_Column_List" />
		from t_fiduciary_loan
		where 1=1
		<if test="user_id!= null and user_id != ''">
			and `user_id` = #{user_id}
		</if>
		<if test="phone != null and phone != ''">
			and `phone` like concat('%',#{phone},'%')
		</if>
		order by create_time desc
	</select>
	<!-- 根据手机号查询（模糊查询pc端） -->
	<select id="listAllAndPhone" resultType="com.antifraud.entity.FiduciaryLoan">
		select
		<include refid="Base_Column_List" />
		from
		t_fiduciary_loan
		<where>
		<if test="phone != null and phone != ''">
			phone like concat('%',#{phone},'%')
		</if>
		<if test="user_id != null and user_id != ''" >
			and user_id=#{user_id} 
		</if>
		<if test="type != null and type != ''" >
			and type=#{type} 
		</if>
		<choose>
			<when test="status != null and status != ''">
			    and status=#{status} 
			</when>
			<when test="type == null and status == null">
				and 1=1
			</when>
			<otherwise>
			    and ISNULL(status) 
			</otherwise>
		</choose>
		</where>
		order by id desc
		limit #{page},#{size}
	</select>
	
	<!-- 查询所有（lujinpeng） -->
	<select id="findAll" resultType="com.antifraud.entity.FiduciaryLoan">
		select
		<include refid="Base_Column_List" />
		from t_fiduciary_loan
		
	</select>
	<!-- 通过报单编号查询（lujinpeng） -->
	<select id="findByEntryNumber" resultType="com.antifraud.entity.FiduciaryLoan">
		select
		<include refid="Base_Column_List" />
		from t_fiduciary_loan
		where entry_number=#{entry_number}
	</select>
	
	
	<!-- 分页查询 （lujinpeng） -->
	<select id="findByLimit" resultType="com.antifraud.entity.FiduciaryLoan">
		select
		<include refid="Base_Column_List" />
		from t_fiduciary_loan
		<where> 
			<if test="status != null and status != ''" >
				status=#{status} 
			</if>
			<if test="user_id != null and user_id != ''" >
				and user_id=#{user_id} 
			</if>
		</where>
		order by id desc
		limit #{page},#{size}
	</select>

	<!-- 查询总数 （lujinpeng） -->
	<select id="getCount" resultType="java.lang.Integer">
		select count(*)
		from t_fiduciary_loan
		<where>
		<if test="phone != null and phone != ''">
			`phone` like concat('%',#{phone},'%')
		</if>
		<if test="user_id != null and user_id != ''" >
			and user_id=#{user_id} 
		</if>
		<if test="type != null and type != ''" >
			and type=#{type} 
		</if>
		<choose>
			<when test="status != null and status != ''">
			    and status=#{status} 
			</when>
			<when test="type == null and status == null">
				and 1=1
			</when>
			<otherwise>
			    and ISNULL(status) 
			</otherwise>
		</choose>
		</where>
	</select>
	<!-- 查询目前最大的一个报单编号 -->
	<select id="findLastEntryNumber" resultType="com.antifraud.entity.FiduciaryLoan">
		select *
		from t_fiduciary_loan
		order by entry_number desc limit 1
	</select>
	<!-- 资产评估 -->
	<select id="ResultFiduciaryLoan" resultType="com.antifraud.entity.FiduciaryLoan">
		select *
		from t_fiduciary_loan
		where id=#{id}
	</select>
	<!-- 根据userid查询 -->
	<select id="findByUserId" resultType="com.antifraud.entity.FiduciaryLoan">
	select *
		from
		t_fiduciary_loan
		where user_id = #{user_id}
		order by id desc
		<if test="page != null and size != null">
			limit #{page},#{size}
		</if>
	</select>
	<!-- 分页查询状态为6的业务报单 -->
	<select id="findallForCamapte" resultType="com.antifraud.entity.FiduciaryLoan">
		select *
		from
		t_fiduciary_loan
		where status = 6 limit #{star},#{size}
	</select>
	<!-- 为分页而服务  -->
	<select id="findallForCamaptecount" resultType="integer">
		select count(*)
		from
		t_fiduciary_loan
		where status = 6
	</select>
	<!-- 修改报单状态 -->
	<update id="updateFiduciaryLoanStatus">
		UPDATE t_fiduciary_loan 
		SET STATUS =#{status} ,remark =#{remark}
		WHERE entry_number = #{entry_number}  
	</update>
	<!-- 查询上标所需要的字段 -->
	<select id="findListAlls"  resultType="com.antifraud.entityVO.FklistVo">
	select   h.entry_number entry_number,
o.service_rate service_rate,b.facetime facetime,b.Interview_place Interview_place,h.name name,
h.gender gender,h.age age,o.company_name company_name,b.reception_personnel reception_personnel,
h.id_number id_number,o.occupational occupational,o.company_address company_address,
o.commany_tel commany_tel,b.home_address home_address, h.phone phone,h.marital_status marital_status,
h.spouses_name spouse_identification_name,h.spouse_telephone spouse_telephone,b.monthly_profit monthly_profit,
b.spouse_monthly_profit spouse_monthly_profit,b.home_annual_income home_annual_income,h.purpose_of_loan purpose_of_loan,
h.approval_limit approval_limit,b.bor_type bor_type,b.borrowing_species borrowing_species,b.reward reward,
b.money_collecting_time money_collecting_time,b.ource_of_revenue ource_of_revenue,b.repayment repayment,
b.housing_situation housing_situation,b.car_situation car_situation,b.other_assets other_assets,
b.guaranty_style guaranty_style,b.credit credit,b.name_of_sponsor name_of_sponsor,b.margin_trade margin_trade,
b.pledge_type pledge_type,b.belong_to_oneself belong_to_oneself,b.assess_price assess_price,
b.life_of_loan life_of_loan,b.whether_the_loan whether_the_loan,b.observant_party observant_party,
b.branch_office branch_office,h.education education,b.line_of_credit line_of_credit,b.liabilities_of_bank liabilities_of_bank,
b.liabilities_of_folk liabilities_of_folk,b.loan_documentation loan_documentation,b.borrowing_that borrowing_that,
b.survey_and_opinion survey_and_opinion,o.period_of_resident period_of_resident,h.type type,o.industry_of_the_company industry_of_the_company,
b.credit credit,o.duty duty,o.professional_title professional_title,o.annual_income annual_income,
h.emergency_relation emergency_relation,
o.residential_condition residential_condition,h.relative_contact_name relative_contact_name,h.relative_contact_number relative_contact_number,
h.email email,h.apply_for_deadline apply_for_deadline,h.spousal_work_unit spousal_work_unit,h.diploma diploma,h.education education,h.remark remark,
h.marital_status marital_status,o.company_mail company_mail,b.annual_interest_rate annual_interest_rate,b.risk_control_opinion risk_control_opinion,
o.throw_industry throw_industry,h.mailing_address mailing_address,h.emergency_name emergency_name,h.emergency_phone emergency_phone,h.emergency_id_number emergency_id_number,
h.apply_for_limit apply_for_limit,h.create_time create_time,h.update_time update_time,h.business_type business_type,h.account_opening_time account_opening_time,
h.domestic_relation domestic_relation,h.home_phone,h.spouse_identification_number,h.business_phone_number,h.permanent_residence_address,o.starting_work starting_work
from
		t_fiduciary_loan h,t_occupational_information
		o,t_business_massage b

		where h.entry_number=o.entry_number and h.entry_number=b.entry_number and h.entry_number=#{entry_number} and h.status=7
	
	</select>
	
	
	<!-- 统计信用贷款总数量 -->
	<select id="fiduciaryCount" resultType="integer">
		select count(*) from t_fiduciary_loan 
	</select>
	<!-- 信贷金额 -->
	<select id="fiduciaryMoney" resultType="java.math.BigDecimal">
		select sum(approval_limit) 
		from t_fiduciary_loan 
	</select>	
	
	<!-- 根据风控人员Id(management)查询状态值(status)为3(业务反馈通过)的数据 -->
	<select id="findByManagement" resultType="com.antifraud.entity.FiduciaryLoan">
		select * 
		from 
		     t_fiduciary_loan 
		WHERE  
		     management = #{management} AND status =3  limit #{page},#{size} 
    </select>
    
    <!-- 统计风控人员Id(management)查询状态值(status)为3(业务反馈通过)的数据 -->
    <select id="findByManagementCount" resultType="integer">
        select COUNT(*) 
		from 
			 t_fiduciary_loan 
		WHERE 
		     management = #{management}  AND status =3
	</select>
	<!-- 根据状态分页查询信用贷款表 -->
	<select id="fiandFiduciaryLoanByStatus" resultType="com.antifraud.entity.FiduciaryLoan">
	 SELECT *
	 FROM t_fiduciary_loan 
	 WHERE `status` IN (${status1},${status2})
	 LIMIT ${star},${limit}
	</select>
	
	<select id="fiandFiduciaryLoanByStatusCount" resultType="integer">
	 SELECT count(*)
	 FROM t_fiduciary_loan 
	 WHERE `status` IN (${status1},${status2})
	</select>
	
	<!-- 修改报单状态和备注 -->
	<update id="updateStatusAndRemark">
		update t_fiduciary_loan
			set status=#{status},remark=#{remark}
		where 
			id=#{id}
	</update>
	
	
	
		<!-- 查询所有风控内勤人员 -->
		<!-- List<User> getassessmensIdF(); -->
		<select id="getassessmensIdF" resultType="com.antifraud.entity.User">
		
		   SELECT id from t_user WHERE post='风控内勤'  or post='风控主管'
		
		</select>
		
		<!-- 查询所有风控外勤人员 -->
		<!-- List<User> getRiskManagementIdF(); -->
		<select id="getRiskManagementIdF" resultType="com.antifraud.entity.User">
		
		   SELECT id from t_user WHERE post='风控外勤'  or post='风控主管'
		
		</select>
		
		
		<!-- 查询最后一条报单的风控内勤id -->
		<!-- List<VehicleMortgage> lastidF(); -->
		<select id="lastidF" resultType="com.antifraud.entity.FiduciaryLoan">
		  select  *  from t_fiduciary_loan where status=3 order by update_time DESC limit 1
		</select>
		
		<!-- 查询最后一条已通过面审的风控外勤id -->
		<select id="lastidFS" resultType="com.antifraud.entity.FiduciaryLoan">
		  select  *  from t_fiduciary_loan where status=4  order by update_time DESC limit 1
		</select>
		
		<!-- 修改风控内勤id -->
		<!-- int updateManagementId(@Param("id")Long id,@Param("managemnt")Long managemnt); -->
		<update id="updateManagementId" >
		 update t_fiduciary_loan
			set management=#{management}
		where 
			id=#{id}
		</update>
		
		
		<!-- 修改风控外勤id -->
		<!-- int updateRiskManagementId(@Param("id")Long id,@Param("risk_management")Long risk_management); -->
		<update id="updateRiskManagementId" >
		 update t_fiduciary_loan
			set risk_management=#{risk_management}
		where 
			id=#{id}
		</update>
	
		<!-- 根据报单编号查询 -->
		<!-- public FiduciaryLoan findByEntryNumbers(String entry_number); -->
	<select id="findByEntryNumbers" resultType="com.antifraud.entity.FiduciaryLoan">
		select * from t_fiduciary_loan where entry_number=#{entry_number}
	</select>
	
	<!-- 查询信用评估师id -->
	<select id="getassessmensId" resultType="com.antifraud.entity.User">
		select id  
		from t_user
		where post = '信用评估师'
	</select>
	<!-- 查询最后一条资产评估的id -->
	<select id="lastid" resultType="com.antifraud.entity.FiduciaryLoan">
		select * from t_fiduciary_loan
		order by update_time desc
		limit 1
	</select>
	
	<!-- 拒绝通过的方法(拒绝通过后,订单状态变为1,不通过,但是订单不会删除) -->
	<!-- int refuseToPass(String entry_number,int status); -->
	<update id="refuseToPass">
		update
			t_fiduciary_loan
			set status=#{status}
		where
			entry_number=#{entry_number}
	</update>
	
	
	<!-- 根据报单编号修改备注信息 -->
	<!-- int updateRemark(String entry_number,String remark); -->
	<update id="updateRemark">
		update 
			t_fiduciary_loan
			set remark=#{remark}
		where
			entry_number=#{entry_number}
	</update>
	
	<!-- 根据保单编号查询当前操作人 -->
	<select id="selectManagement" resultType="com.antifraud.entity.User">
		select t.name FROM
		 t_user t where t.id=(
		 	select h.management  from 
		 	  t_fiduciary_loan h where h.entry_number = #{entry_number})
		
	</select>
	
	<!-- 根据报单编号修改更新时间 -->
	<!-- int updateTimeF(@Param("entry_number")String entry_number); -->
	<update id="updateTimeF">
		update
			t_fiduciary_loan
			set update_time=now()
		where
			entry_number=#{entry_number}
	</update>
	
	
	
	<!-- 修改并保存信贷报单 -->
	<!-- int submitDeclarationF(FiduciaryLoan fiduciaryLoan) -->
	<update id="submitDeclarationF" parameterType="com.antifraud.entity.FiduciaryLoan">
		update
			t_fiduciary_loan
			set
			name=#{name},
			id_number=#{id_number},
			gender=#{gender},
			age=#{age},
			marital_status=#{marital_status},
			education=#{education},
			diploma=#{diploma},
			phone=#{phone},
			home_phone=#{home_phone},
			business_phone_number=#{business_phone_number},
			home_address=#{home_address},
			mailing_address=#{mailing_address},
			permanent_residence_address=#{permanent_residence_address},
			email=#{email},
			spouses_name=#{spouses_name},
			spouse_identification_number=#{spouse_identification_number},
			spousal_work_unit=#{spousal_work_unit},
			spouse_telephone=#{spouse_telephone},
			relative_contact_name=#{relative_contact_name},
			domestic_relation=#{domestic_relation},
			relative_contact_number=#{relative_contact_number},
			emergency_name=#{emergency_name},
			emergency_relation=#{emergency_relation},
			emergency_phone=#{emergency_phone},
			apply_for_limit=#{apply_for_limit},
			apply_for_deadline=#{apply_for_deadline},
			account_opening_time=#{account_opening_time},
			type=#{type},
			affirm_time=#{affirm_time}
		where
			entry_number=#{entry_number}
	</update>
	
	
	
	
	
	<!-- 根据日期查询首页信贷报单信息 -->
	<!-- BigDecimal findByDate(@Param("year")String year,@Param("month")String month,@Param("day")String day); -->
	<select id="findByDate" resultType="java.math.BigDecimal">
		SELECT sum(approval_limit)
		FROM
		t_fiduciary_loan
		<where>
			<if test="year!=null">
				AND year(create_time) = #{year}
			</if>
			<if test="month!=null">
				AND month(create_time )= #{month}
			</if>
			<if test="day!=null">
				AND day(create_time)=#{day}
			</if>
		</where>
	</select>

	
	<!-- 根据日期查询首页信贷报单总数量 -->
	<!-- Integer findByCount(@Param("year")String year,@Param("month")String month,@Param("day")String day) -->
	<select id="findByCount" resultType="java.lang.Integer">
		SELECT count(*) 
		FROM 
		t_fiduciary_loan
		<where>
			<if test="year!=null">
				AND year(create_time) = #{year}
			</if>
			<if test="month!=null">
				AND month(create_time )= #{month}
			</if>
			<if test="day!=null">
				AND day(create_time)=#{day}
			</if>
		</where>
	</select>
	
	
	
	
</mapper>